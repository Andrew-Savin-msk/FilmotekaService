apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: filmoteka
data:
  ZOOKEEPER_CLIENT_PORT: "2181"
  ZOOKEEPER_TICK_TIME: "2000"
  KAFKA_BROKER_ID: "1"
  KAFKA_ZOOKEEPER_CONNECT: "localhost:2181"
  KAFKA_ADVERTISED_LISTENERS: "INSIDE://filmoteka-broker:9092,OUTSIDE://filmoteka-broker:29092"
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
  KAFKA_INTER_BROKER_LISTENER_NAME: "INSIDE"
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
  KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filmoteka-broker
  namespace: filmoteka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker
  template:
    metadata:
      labels:
        app: broker
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:latest
        envFrom:
        - configMapRef:
            name: kafka-config
        ports:
        - containerPort: 2181
      - name: kafka
        image: confluentinc/cp-kafka:latest
        envFrom:
        - configMapRef:
            name: kafka-config
        ports:
        - containerPort: 9092
        - containerPort: 29092
---
apiVersion: v1
kind: Service
metadata:
  name: filmoteka-broker
  namespace: filmoteka
spec:
  type: NodePort
  ports:
    - name: kafka-inside
      port: 9092
      targetPort: 9092
  selector:
    app: broker
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config
  namespace: filmoteka
data:
  POSTGRES_USER: "<database_username>"
  POSTGRES_PASSWORD: "<database_user_password>"
  POSTGRES_DB: "<database_name>"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filmoteka-db
  namespace: filmoteka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: postgres:latest
        envFrom:
        - configMapRef:
            name: db-config
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: init-volume
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init.sql
      volumes:
      - name: init-volume
        configMap:
          name: db-init-sql
---
apiVersion: v1
kind: Service
metadata:
  name: filmoteka-db
  namespace: filmoteka
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: db
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: back-config
  namespace: filmoteka
data:
  DOCKER_CONFIG_PATH: "<path_to_config_file>"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filmoteca-backend
  namespace: filmoteka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: werrer/filmoteka-api:latest
        ports:
          - containerPort: 8081
        envFrom:
        - configMapRef:
            name: back-config
        volumeMounts:
        - name: config-volume
          mountPath: <path_to_configs_directory>
      volumes:
      - name: config-volume
        configMap:
          name: backend-config-toml
---
apiVersion: v1
kind: Service
metadata:
  name: filmoteca-backend-service
  namespace: filmoteka
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - port: 8081
      targetPort: 8081
      nodePort: 30081
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mail-sender-config
  namespace: filmoteka
data:
  DOCKER_CONFIG_PATH: "<path_to_config_file>"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filmoteca-mail-sender
  namespace: filmoteka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mail-sender
  template:
    metadata:
      labels:
        app: mail-sender
    spec:
      containers:
      - name: mail-sender
        image: werrer/filmoteka-mail-sender:latest
        ports:
          - containerPort: 8081
        envFrom:
        - configMapRef:
            name: mail-sender-config
        volumeMounts:
        - name: config-volume
          mountPath: <path_to_configs_directory>
      volumes:
      - name: config-volume
        configMap:
          name: mail-sender-config-toml
