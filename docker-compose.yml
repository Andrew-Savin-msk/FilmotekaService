version: '3.8'
services:
  # front:
  back:
    build: ./backend
    environment:
      CONFIG_PATH_DOCKER: configs/server_docker.toml
    hostname: backend
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - 8081:8081
  database:
    image: postgres
    hostname: database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: filmoteka
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
  rabbitmq:
    image: rabbitmq:management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rmuser
      RABBITMQ_DEFAULT_PASS: rmpassword
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_port_connectivity"]
      interval: 30s
      timeout: 30s
      retries: 1
      start_period: 40s
    ports:
      - "5672:5672"
      - "15672:15672"
  ms:
    build: ./mail_sender
    hostname: mail_sender
    environment:
      DOCKER_CONFIG_PATH: "config/server_docker.toml"
    depends_on:
      rabbitmq:
        condition: service_healthy
