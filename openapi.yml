info:
  description: API for managing a film library, converted to match the provided OpenAPI
    structure.
  title: Filmoteka API
  version: 1.0.0
openapi: 3.1.1
paths:
  /authorize:
    post:
      operationId: post_authorize
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
              type: object
        required: true
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /authorize
  /films:
    get:
      operationId: get_films
      parameters:
      - description: Number of results to return
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: Number of results to skip
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /films
  /get-actor/{actorId}:
    get:
      operationId: get_get-actor_{actorId}
      parameters:
      - in: path
        name: actorId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /get-actor/{actorId}
  /get-actors:
    get:
      operationId: get_get-actors
      parameters:
      - description: Number of results to return
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: Number of results to skip
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /get-actors
  /private/create-actor:
    post:
      operationId: post_private_create-actor
      parameters:
      - description: Session token provided by /authorize
        in: header
        name: Cookie
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                birthdate:
                  type: string
                gender:
                  type: string
                name:
                  type: string
              type: object
        required: true
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /private/create-actor
  /private/delete-actor/{actorId}:
    delete:
      operationId: delete_private_delete-actor_{actorId}
      parameters:
      - in: path
        name: actorId
        required: true
        schema:
          type: string
      - description: Session token provided by /authorize
        in: header
        name: Cookie
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /private/delete-actor/{actorId}
  /private/delete-film/{filmId}:
    delete:
      operationId: delete_private_delete-film_{filmId}
      parameters:
      - in: path
        name: filmId
        required: true
        schema:
          type: string
      - description: Session token provided by /authorize
        in: header
        name: Cookie
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /private/delete-film/{filmId}
  /private/post-film:
    post:
      operationId: post_private_post-film
      parameters:
      - description: Session token provided by /authorize
        in: header
        name: Cookie
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                actors:
                  type: string
                assesment:
                  type: string
                description:
                  type: string
                name:
                  type: string
                release_date:
                  type: string
              type: object
        required: true
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /private/post-film
  /private/update-film/{filmId}:
    put:
      operationId: put_private_update-film_{filmId}
      parameters:
      - in: path
        name: filmId
        required: true
        schema:
          type: string
      - description: Session token provided by /authorize
        in: header
        name: Cookie
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                assesment:
                  type: string
                description:
                  type: string
                name:
                  type: string
                release_date:
                  type: string
              type: object
        required: true
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /private/update-film/{filmId}
  /private/who-am-i:
    get:
      operationId: get_private_who-am-i
      parameters:
      - description: Session token provided by /authorize
        in: header
        name: Cookie
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /private/who-am-i
  /register:
    post:
      operationId: post_register
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
              type: object
        required: true
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /register
  /select-films:
    get:
      operationId: get_select-films
      parameters:
      - description: Number of results to return
        in: query
        name: limit
        required: false
        schema:
          default: 10
          type: integer
      - description: Number of results to skip
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad Request
        '404':
          description: Not Found
      summary: /select-films
servers:
- description: Локальный сервер API
  url: http://localhost:8081/api
